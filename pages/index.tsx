import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import React from 'react';
import { UserApi } from '../api/UserApi';
import { ChooseAvatarStep } from '../components/steps/ChooseAvatarStep';
import { EnterCodeStep } from '../components/steps/EnterCodeStep';
import { EnterNameStep } from '../components/steps/EnterNameStep';
import { EnterPhoneStep } from '../components/steps/EnterPhoneStep';
import { GithubStep } from '../components/steps/GithubStep';
import { WelcomeStep } from '../components/steps/WelcomeStep';
import { checkAuth } from '../server/utils/checkAuth';
import Axios from '../core/axios';
import { Api } from '../api';
import { wrapper } from '../redux/store';
import { setUserData } from '../redux/slices/userSlice';

const stepsComponents = {
  0: WelcomeStep,
  1: GithubStep,
  3: EnterNameStep,
  4: ChooseAvatarStep,
  5: EnterPhoneStep,
  6: EnterCodeStep,
};

type MainContextProps = {
  onNextStep: () => void;
  setUserData: React.Dispatch<React.SetStateAction<TUserData | undefined>>;
  step: number;
  userData: TUserData;
  setFieldValue: (field: keyof TUserData, value: string | number) => void;
};

export interface TUserData {
  id: string;
  fullname: string;
  avatarUrl: string;
  isActive: number;
  username: string;
  phone: string;
  token?: string;
}

const getUserData = (): TUserData | null => {
  try {
    return JSON.parse(window.localStorage.getItem('userData'));
  } catch (error) {
    return null;
  }
};

export const MainContext = React.createContext<MainContextProps>({} as MainContextProps);

const Home: NextPage = () => {
  const [step, setStep] = React.useState<number>(0);
  const [userData, setUserData] = React.useState<TUserData>();
  const Step = stepsComponents[step];

  const onNextStep = () => {
    setStep((prev) => prev + 1);
  };

  const setFieldValue = (field: string, value: string | number) => {
    setUserData((prev) => ({
      ...prev,
      [field]: value,
    }));
  };

  React.useEffect(() => {
    if (typeof window !== 'undefined') {
      const json = getUserData();
      if (json) {
        setUserData(json);
      }
    }
  }, []);

  React.useEffect(() => {
    if (userData) {
      console.log(userData.token);
      window.localStorage.setItem('userData', JSON.stringify(userData));
      Axios.defaults.headers.Authorization = 'Bearer ' + userData.token;
    }
  }, [userData]);

  return (
    <>
      <Head>
        <title>Clubhouse: Drop-in audio chat</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <MainContext.Provider value={{ step, onNextStep, setUserData, userData, setFieldValue }}>
        <Step />
      </MainContext.Provider>
    </>
  );
};

export const getServerSideProps = wrapper.getServerSideProps((store) => async (ctx) => {
  try {
    const user = await checkAuth(ctx);
    const banned = await Api(ctx).checkBan();

    if (banned.banned) {
      return {
        props: {},
        redirect: {
          permanent: false,
          destination: '/banned',
        },
      };
    }

    if (user?.isActive === 1) {
      store.dispatch(setUserData(user));
      return {
        props: {},
        redirect: {
          permanent: false,
          destination: '/rooms',
        },
      };
    }
  } catch (error) {}
  return {
    props: {},
  };
});

export default Home;
